// Code generated by MockGen. DO NOT EDIT.
// Source: vendor/github.com/advancedhosting/advancedhosting-api-go/ah/volumes.go

// Package mock_ah is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ah "github.com/advancedhosting/advancedhosting-api-go/ah"
	gomock "github.com/golang/mock/gomock"
)

// MockVolumesAPI is a mock of VolumesAPI interface.
type MockVolumesAPI struct {
	ctrl     *gomock.Controller
	recorder *MockVolumesAPIMockRecorder
}

// MockVolumesAPIMockRecorder is the mock recorder for MockVolumesAPI.
type MockVolumesAPIMockRecorder struct {
	mock *MockVolumesAPI
}

// NewMockVolumesAPI creates a new mock instance.
func NewMockVolumesAPI(ctrl *gomock.Controller) *MockVolumesAPI {
	mock := &MockVolumesAPI{ctrl: ctrl}
	mock.recorder = &MockVolumesAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVolumesAPI) EXPECT() *MockVolumesAPIMockRecorder {
	return m.recorder
}

// ActionInfo mocks base method.
func (m *MockVolumesAPI) ActionInfo(arg0 context.Context, arg1, arg2 string) (*ah.VolumeAction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActionInfo", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ah.VolumeAction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActionInfo indicates an expected call of ActionInfo.
func (mr *MockVolumesAPIMockRecorder) ActionInfo(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActionInfo", reflect.TypeOf((*MockVolumesAPI)(nil).ActionInfo), arg0, arg1, arg2)
}

// Actions mocks base method.
func (m *MockVolumesAPI) Actions(arg0 context.Context, arg1 string) ([]ah.VolumeAction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Actions", arg0, arg1)
	ret0, _ := ret[0].([]ah.VolumeAction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Actions indicates an expected call of Actions.
func (mr *MockVolumesAPIMockRecorder) Actions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Actions", reflect.TypeOf((*MockVolumesAPI)(nil).Actions), arg0, arg1)
}

// Copy mocks base method.
func (m *MockVolumesAPI) Copy(arg0 context.Context, arg1 string, arg2 *ah.VolumeCopyActionRequest) (*ah.VolumeAction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Copy", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ah.VolumeAction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Copy indicates an expected call of Copy.
func (mr *MockVolumesAPIMockRecorder) Copy(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Copy", reflect.TypeOf((*MockVolumesAPI)(nil).Copy), arg0, arg1, arg2)
}

// Create mocks base method.
func (m *MockVolumesAPI) Create(arg0 context.Context, arg1 *ah.VolumeCreateRequest) (*ah.Volume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*ah.Volume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockVolumesAPIMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVolumesAPI)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockVolumesAPI) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVolumesAPIMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVolumesAPI)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockVolumesAPI) Get(arg0 context.Context, arg1 string) (*ah.Volume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*ah.Volume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVolumesAPIMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVolumesAPI)(nil).Get), arg0, arg1)
}

// List mocks base method.
func (m *MockVolumesAPI) List(arg0 context.Context, arg1 *ah.ListOptions) ([]ah.Volume, *ah.Meta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]ah.Volume)
	ret1, _ := ret[1].(*ah.Meta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockVolumesAPIMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockVolumesAPI)(nil).List), arg0, arg1)
}

// Resize mocks base method.
func (m *MockVolumesAPI) Resize(arg0 context.Context, arg1 string, arg2 int) (*ah.Action, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resize", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ah.Action)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resize indicates an expected call of Resize.
func (mr *MockVolumesAPIMockRecorder) Resize(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resize", reflect.TypeOf((*MockVolumesAPI)(nil).Resize), arg0, arg1, arg2)
}

// Update mocks base method.
func (m *MockVolumesAPI) Update(arg0 context.Context, arg1 string, arg2 *ah.VolumeUpdateRequest) (*ah.Volume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ah.Volume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockVolumesAPIMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVolumesAPI)(nil).Update), arg0, arg1, arg2)
}
